swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile updated successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/accounts:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Account API
      description: API for receiving user accounts lists
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
          description: Bearer authentication token
        - name: UserID
          in: query
          required: true
          type: string
          description: User ID
      produces:
        - application/json
      responses:
        '200':
          description: Account list successfully retrieved
          schema:
            type: array
            items:
              $ref: '#/definitions/UserAccount'
        '401':
          description: Missing authentication token
  /user/accounts/account:
    get:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Account API
      description: API for receiving user account transactions list
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
          description: Bearer authentication token
        - name: accountId
          in: query
          required: true
          type: string
          description: Account ID
      produces:
        - application/json
      responses:
        '200':
          description: Account list successfully retrieved
          schema:
            type: array
            items:
              $ref: '#/definitions/AccountTransactions'
        '401':
          description: Missing authentication token
  /user/accounts/account/transactions:
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Account API
      description: API for modifying a transaction category
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
          description: Bearer authentication token
        - name: accountID
          in: query
          required: true
          type: string
          description: Account ID
        - name: TransactionID
          in: query
          required: true
          type: string
          description: Transaction ID
        - name: TransactionCategory
          in: body
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: Account transaction category successfully updated
          schema:
            $ref: '#/definitions/TransactionID'
        '401':
          description: Missing authentication token

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

definitions:
  AccountTransactions:
    type: object
    properties:
      transactionId:
        type: string
        description: Transaction ID
      transactionDate:
        type: string
        description: Date of the transaction
      transactionCategory:
        type: string
        description: Category of the transaction
      transactionNote:
        type: string
        description: Transaction note
      transactionAmount:
        type: number
        description: Amount of the transaction
      transactionLocation:
        type: string
        description: Transaction location

  TransactionID:
    type: object
    properties:
      transactionDate:
        type: string
        description: Date of the transaction
      transactionCategory:
        type: string
        description: Category of the transaction
      transactionNote:
        type: string
        description: Transaction note
      transactionAmount:
        type: number
        description: Amount of the transaction
      transactionLocation:
        type: string
        description: Transaction location

  UserAccount:
    type: object
    properties:
      accountId:
        type: string
        description: Account ID
      accountName:
        type: string
        description: Account name
      accountType:
        type: string
        description: Account type

  User:
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password
      firstName:
        type: string
        description: User first name
      lastName:
        type: string
        description: User last name
      userName:
        type: string
        description: User public name

  Login:
    properties:
      email:
        type: string
        description: User email
      password:
        type: string
        description: User password

  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string

  LoginResponse:
    type: object
    properties:
      token:
        type: string

  UserProfile:
    type: object
    properties:
      userName:
        type: string
